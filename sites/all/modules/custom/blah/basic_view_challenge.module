<?php

/**
 * Custom Content Function to get posts from the last week
 */
function view_challenge_contents() {//
  $user_input = variable_get('view_challenge_max', 3);
  $select_node = array($user_input, $user_input + 1);

  if (!node_load($select_node[1])){
    $select_node[1] = 1;
  }
  $nodes = entity_load('node', $select_node);

  return $nodes;

//  foreach ($nodes as $node) {
//    $html_teaser[] = $node->body['und']['0']['safe_value'];
//  }
//
//  return $html_teaser;

}

/**
 * Implements hook_menu().
 */
function view_challenge_menu() {
  $items = array();
  $items['view_challenge'] = array(
    'title' => 'View Challenge',
    'description' => 'Configuration for View Challenge module',
    'page callback' => '_view_challenge_page',
    'access arguments' => array('access view_challenge content'),
    'type' => MENU_NORMAL_ITEM
  );
  return $items;
}

/**
 * Implements hook_form().
 */
function view_challenge_form($form, &$form_state) {
  $form['view_challenge_max'] = array(
    '#type' => 'textfield',
    '#title' => t('Choose a post number to view'),
    '#default_value' => variable_get('view_challenge_max', 3),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t('The maximum number of links to display in the block.'),
    '#required' => TRUE
  );
  return system_settings_form($form);
}

/**
 * Implements validation from the Form API
 */
function view_challenge_form_validate($form, &$form_state) {
  if (!empty($form_state['value'])){
    $max_num = $form_state['value']['view_challenge_max'];
    if (!is_numeric($max_num)) {
      form_set_error('view_challenge_max',
        t('You must enter a number for the maximum number of posts to display.'));
    } elseif ($max_num <= 0) {
      form_set_error('view_challenge_max',
        t('Maximum number of posts to display must be positive'));
    }
  }
}


function _view_challenge_page() {
  $result = view_challenge_contents();
  $items = array();

  foreach($result as $node) {
    $items[] = l("Post #".$node->nid." ".$node->title, 'node/'.$node->nid);
  }
  //$items = view_challenge_contents();

  if (empty($items)) {
    $page_array['view_challenge_arguments'] = array(
      '#title' => t('All posts from the last week'),
      '#markup' => t('No posts available')
    );
  } else {
    $efq = new EntityFieldQuery();
    $efq->entityCondition('entity_type', 'node');
    $result = $efq->execute(); // To get the count of articles

    if (count($items) < 2) {
      $items = array('Post does not exist, please choose a number equal to or '.
                      'lower than '.count($result['node']));
    }
    $page_array['view_challenge_arguments'] = array(
      '#title' => t('All posts from the last week'),
      '#items' => $items,
      '#form_block' => drupal_get_form('view_challenge_form'),
      '#theme' => 'item_list__view_challenge'
    );
  }

  return $page_array;
}

/**
 * Implements hook_theme().
 */
function view_challenge_theme($existing, $type, $theme, $path) {
  return array(
    'item_list__view_challenge' => array(
      'template' => 'item-list--view-challenge',
      'path' => $path . '/templates',
      'variables' => array(
        'items' => array(),
        'form_block' => array(),
      )
    )
  );
}

/**
 * Look these up as http://dgo.to/<MODULENAME>
 */


// entityreference
// entity_embed
// views
// link
// elements
// entity
// date
// EntityMetadataWrapper







